{
  "unpublishedPage": {
    "name": "ExchangeToken",
    "slug": "exchangetoken",
    "layouts": [
      {
        "viewMode": false,
        "dsl": {
          "widgetName": "MainContainer",
          "backgroundColor": "none",
          "rightColumn": 1224,
          "snapColumns": 64,
          "detachFromLayout": true,
          "widgetId": "0",
          "topRow": 0,
          "bottomRow": 380,
          "containerStyle": "none",
          "snapRows": 79,
          "parentRowSpace": 1,
          "type": "CANVAS_WIDGET",
          "canExtend": true,
          "version": 89,
          "minHeight": 810,
          "parentColumnSpace": 1,
          "dynamicBindingPathList": [],
          "leftColumn": 0
        },
        "layoutOnLoadActions": [
          [
            {
              "id": "ExchangeToken_auth.startUp",
              "name": "auth.startUp",
              "collectionId": "ExchangeToken_auth",
              "confirmBeforeExecute": false,
              "pluginType": "JS",
              "jsonPathKeys": [
                "async function () {\n  const tokenExist = appsmith.store.token;\n  if (tokenExist) {\n    return await navigateTo(\"Home\");\n  }\n  try {\n    await gg_get_token.run();\n    const tokenInfo = await gg_get_token.data;\n    const idToken = tokenInfo.id_token;\n    const decodedToken = await jsonwebtoken.decode(tokenInfo);\n    const email = decodedToken.email;\n    await check_email_exist.run({\n      email\n    }).catch(error => {\n      ('email' + email + error, 'error');\n    });\n    const id = check_email_exist.data[0].id;\n    if (check_email_exist.data.length === 0) {\n      await clearStore();\n      return await navigateTo(\"Login\");\n    }\n    await storeValue('token', tokenInfo);\n    await storeValue('user', decodedToken);\n    await add_token_to_db.run({\n      id,\n      idToken\n    });\n    showAlert('Check ok', 'success');\n    await navigateTo(\"Home\");\n  } catch (error) {\n    showAlert('You re not allow to login this page', 'error');\n    navigateTo(\"Login\");\n  }\n}"
              ],
              "timeoutInMillisecond": 10000
            },
            {
              "id": "ExchangeToken_check_email_exist",
              "name": "check_email_exist",
              "confirmBeforeExecute": false,
              "pluginType": "DB",
              "jsonPathKeys": [
                "this.params.email"
              ],
              "timeoutInMillisecond": 10000
            }
          ]
        ],
        "layoutOnLoadActionErrors": [],
        "validOnPageLoadActions": true,
        "id": "ExchangeToken",
        "deleted": false,
        "policies": [],
        "userPermissions": []
      }
    ],
    "userPermissions": [],
    "policies": [],
    "isHidden": true
  },
  "deleted": false,
  "gitSyncId": "65feb01801a5d95cc78a38c0_65feb03501a5d95cc78a38c5"
}